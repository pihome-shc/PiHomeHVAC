#!/bin/bash

trap '{ stty sane; echo ""; errexit "Aborted"; }' SIGINT SIGTERM

MNTPATH="/tmp/img-info-mnt"

errexit()
{
  echo ""
  echo -e "$1"
  echo ""
  if [ "${MNTED}" = "TRUE" ]; then
    umount "${BOOTMNT}/" &> /dev/null
    umount "${MNTPATH}/" &> /dev/null
  fi
  rm -rf "${MNTPATH}/" &> /dev/null
  rmloop
  exit 1
}

mkloop()
{
  LOOP="$(losetup -f --show -P "${IMGFILE}")"
  if [ $? -ne 0 ]; then
    errexit "Unable to create loop device"
  fi
}

rmloop()
{
  if [ "${LOOP}" != "" ]; then
    losetup -d "${LOOP}"
    LOOP="" 
 fi
}

mntimg()
{
  mkloop
  if [ ! -d "${MNTPATH}/" ]; then
    mkdir "${MNTPATH}/"
    if [ $? -ne 0 ]; then
      errexit "Unable to make ROOT partition mount point"
    fi
  fi
  mount "${LOOP}p2" "${MNTPATH}/"
  if [ $? -ne 0 ]; then
    errexit "Unable to mount image ROOT partition"
  fi
  MNTED=TRUE
  BOOTMNT="${MNTPATH}$(sed -n 's|^\S\+\s\+\(/boot\S*\)\s\+vfat\s\+.*$|\1|p' "${MNTPATH}/etc/fstab")"
  if [ ! -d "${BOOTMNT}/" ]; then
    mkdir -p "${BOOTMNT}/"
    if [ $? -ne 0 ]; then
      errexit "Unable to make BOOT partition mount point"
    fi
  fi
  mount "${LOOP}p1" "${BOOTMNT}/"
  if [ $? -ne 0 ]; then
    errexit "Unable to mount image BOOT partition"
  fi
}

umntimg()
{
  umount "${BOOTMNT}/"
  if [ $? -ne 0 ]; then
    errexit "Unable to unmount image BOOT partition"
  fi
  umount "${MNTPATH}/"
  if [ $? -ne 0 ]; then
    errexit "Unable to unmount image ROOT partition"
  fi
  MNTED=FALSE
  rmloop
  rm -r "${MNTPATH}/"
}

usage()
{
  errexit "Usage: $0 [options] pathto/imagefile\n\
-h,--help       This usage description\n\
-u,--ubuntu     Ubuntu (Deprecated)"
}

LOOP=""
MNTED=FALSE
if [ $(id -u) -ne 0 ]; then
  errexit "$0 must be run as root user"
fi
PGMNAME="$(basename $0)"
for PID in $(pidof -x -o %PPID "${PGMNAME}"); do
  if [ ${PID} -ne $$ ]; then
    errexit "${PGMNAME} is already running"
  fi
done
IMGFILE=""
while [ $# -gt 0 ]; do
  case "$1" in

    -h|--help)
      usage
      ;;

    -u|--ubuntu)
      shift
      ;;

    -*|--*)
      usage
      ;;

    *)
      IMGFILE="$1"
      shift
      ;;

  esac
done
FLAG=0
while :
do
  if [[ ${FLAG} -eq 1 || "${IMGFILE}" = "" ]]; then
    while :
    do
      echo ""
      read -r -e -i "${IMGFILE}" -p "Image file name? " IMGFILE
      if [ "${IMGFILE}" = "" ]; then
        continue
      elif [ -d "${IMGFILE}" ]; then
        echo ""
        echo "${IMGFILE} is a directory"
        continue
      else
        break
      fi
    done
  fi
  if [ -f "${IMGFILE}" ]; then
    break
  else
    echo ""
    echo "${IMGFILE} not found"
    FLAG=1
  fi
done
mntimg
echo ""
ls -l "${IMGFILE}"
echo ""
INFO="$(df -T)"
echo "$(sed -n 's|^\(.*\)\s\+Mounted on.*|\1|p' <<< ${INFO})"
echo "$(sed -n "s|^${LOOP}p1\(.*\)\s\+${MNTPATH}.*|boot        \1|p" <<< ${INFO})"
echo "$(sed -n "s|^${LOOP}p2\(.*\)\s\+${MNTPATH}.*|root        \1|p" <<< ${INFO})"
echo ""
echo "$(blkid ${LOOP} | sed -n "s|^${LOOP}:\s*\(.*\)|disk: \1|p")"
echo "$(blkid ${LOOP}p1 | sed -n "s|^${LOOP}p1:\s*\(.*\)|boot: \1|p")"
echo "$(blkid ${LOOP}p2 | sed -n "s|^${LOOP}p2:\s*\(.*\)|root: \1|p")"
echo""
umntimg
